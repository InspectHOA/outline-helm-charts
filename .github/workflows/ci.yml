name: Lint Charts

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'charts/temporal/tests/go.mod'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add dependency repos
        run: |
          helm repo add incubator https://charts.helm.sh/incubator
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add elastic https://helm.elastic.co
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --check-version-increment=false --target-branch ${{ github.event.repository.default_branch }}

      - name: Run template tests
        working-directory: charts/temporal/tests
        run: go test

      - name: Update Outline Chart Dependencies
        run: |
          helm dependency update charts/outline

      - name: Test Outline Chart Template Rendering
        run: |
          helm template charts/outline --debug

      - name: Validate Outline Chart Syntax
        run: |
          helm lint charts/outline

      - name: Install helm-unittest
        run: helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run helm-unittest for Temporal
        working-directory: charts/temporal
        run: helm unittest .

      - name: Create Outline Unit Tests Directory
        run: mkdir -p charts/outline/tests/unit

      - name: Create Basic Outline Unit Tests
        if: success() && !hashFiles('charts/outline/tests/unit/*.yaml')
        run: |
          cat > charts/outline/tests/unit/deployment_test.yaml << 'EOF'
          suite: deployment test
          templates:
            - deployment.yaml
          tests:
            - it: should set correct environment variables
              asserts:
                - contains:
                    path: spec.template.spec.containers[0].env
                    content:
                      name: NODE_ENV
                      value: production
            - it: should set correct image
              asserts:
                - equal:
                    path: spec.template.spec.containers[0].image
                    value: outlinewiki/outline:latest
          EOF

      - name: Run helm-unittest for Outline
        working-directory: charts/outline
        run: |
          if [ -d "tests/unit" ]; then
            helm unittest .
          else
            echo "No unit tests found for Outline chart, skipping"
          fi
