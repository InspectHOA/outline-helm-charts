# Sample values file for using external PostgreSQL and Redis

## Global configuration
global:
  env: production

## Outline application configuration
outline:
  replicaCount: 1

  image:
    repository: outlinewiki/outline
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: wiki.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: outline-tls
        hosts:
          - wiki.example.com

  # Application configuration
  # Non-sensitive environment variables
  env:
    URL: "https://wiki.example.com"
    PORT: 3000
    DEFAULT_LANGUAGE: "en_US"
    # Note: FILE_STORAGE is set automatically based on storage.type

  # Local file storage (default)
  # For S3 storage options, see values-s3-keys.yaml or values-s3-iam.yaml
  storage:
    type: local

  # Secrets configuration
  # All sensitive information should be defined here
  secrets:
    # Core secrets - generate using: openssl rand -hex 32
    SECRET_KEY: "replace-with-a-random-key"
    UTILS_SECRET: "replace-with-a-random-key"

    # Alternatively, reference existing secrets:
    # SECRET_KEY:
    #   secretName: "existing-secret"
    #   secretKey: "secret-key-field"
    # UTILS_SECRET:
    #   secretName: "existing-secret"
    #   secretKey: "utils-secret-field"

    # Authentication configuration - choose only one type
    auth:
      type: "google"  # Options: google, slack, azure, oidc

      # Google OAuth
      google:
        CLIENT_ID: "your-google-client-id"
        CLIENT_SECRET: "your-google-client-secret"
        # Alternatively, reference existing secrets:
        # CLIENT_ID:
        #   secretName: "google-oauth"
        #   secretKey: "client-id"
        # CLIENT_SECRET:
        #   secretName: "google-oauth"
        #   secretKey: "client-secret"

      # Slack OAuth (uncomment to use)
      # slack:
      #   CLIENT_ID: "your-slack-client-id"
      #   CLIENT_SECRET: "your-slack-client-secret"
      #   # Alternatively, reference existing secrets:
      #   # CLIENT_ID:
      #   #   secretName: "slack-oauth"
      #   #   secretKey: "client-id"
      #   # CLIENT_SECRET:
      #   #   secretName: "slack-oauth"
      #   #   secretKey: "client-secret"

      # Azure OAuth (uncomment to use)
      # azure:
      #   CLIENT_ID: "your-azure-client-id"
      #   CLIENT_SECRET: "your-azure-client-secret"
      #   RESOURCE_APP_ID: "your-azure-resource-app-id"
      #   # Alternatively, reference existing secrets:
      #   # CLIENT_ID:
      #   #   secretName: "azure-oauth"
      #   #   secretKey: "client-id"
      #   # CLIENT_SECRET:
      #   #   secretName: "azure-oauth"
      #   #   secretKey: "client-secret"
      #   # RESOURCE_APP_ID:
      #   #   secretName: "azure-oauth"
      #   #   secretKey: "resource-app-id"

      # OIDC (uncomment to use)
      # oidc:
      #   CLIENT_ID: "your-oidc-client-id"
      #   CLIENT_SECRET: "your-oidc-client-secret"
      #   AUTH_URI: "https://your-oidc-provider/auth"
      #   TOKEN_URI: "https://your-oidc-provider/token"
      #   USERINFO_URI: "https://your-oidc-provider/userinfo"
      #   # Alternatively, reference existing secrets:
      #   # CLIENT_ID:
      #   #   secretName: "oidc-auth"
      #   #   secretKey: "client-id"
      #   # CLIENT_SECRET:
      #   #   secretName: "oidc-auth"
      #   #   secretKey: "client-secret"
      #   # AUTH_URI:
      #   #   secretName: "oidc-auth"
      #   #   secretKey: "auth-uri"
      #   # TOKEN_URI:
      #   #   secretName: "oidc-auth"
      #   #   secretKey: "token-uri"
      #   # USERINFO_URI:
      #   #   secretName: "oidc-auth"
      #   #   secretKey: "userinfo-uri"

  persistence:
    enabled: true
    size: 10Gi

## PostgreSQL configuration - using external database
## DATABASE_URL will be automatically generated and stored in a Secret
postgresql:
  enabled: false
  external:
    host: "your-postgres-host.example.com"
    port: 5432
    database: "outline"
    user: "outline"
    password: "your-secure-password"
    # Alternatively, use an existing secret
    # existingSecret: "postgres-credentials"
    # existingSecretKey: "password"

## Redis configuration - using external Redis
## REDIS_URL will be automatically generated and stored in a Secret
redis:
  enabled: false
  external:
    host: "your-redis-host.example.com"
    port: 6379
    password: "your-redis-password"
    # Alternatively, use an existing secret
    # existingSecret: "redis-credentials"
    # existingSecretKey: "redis-password"
